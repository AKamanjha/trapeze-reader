/** * A color space that uses another color space to return values, and a * function to map between values in the input and input values to the * alternate color space */ function AlternateColorSpace(alternate, pdfFunction) {	// TODO	AlternateColorSpace.baseConstructor.call(this, null);	this.alternate = alternate;	this.pdfFunction = pdfFunction;	this._cs = {		toRGB: function() {			return [0,0,0];		}	}}extend(AlternateColorSpace, PDFColorSpace);/** * get the number of components expected in the getPaint command * @Override */AlternateColorSpace.prototype.getNumComponents = function() {	if (this.pdfFunction != null) {		return this.pdfFunction.getNumInputs();	} else {		return this.alternate.getNumComponents();	}}AlternateColorSpace.prototype.toString = function() {	return 'AlternateColorSpace';}